{"version":3,"sources":["components/PokeCard.js","components/PokeCardList.js","components/Scroll.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","height","backgroundColor","palette","secondary","dark","media","img","main","objectFit","txt","color","contrastText","PokeCard","name","weight","classes","Card","className","elevation","CardActionArea","CardHeader","title","CardMedia","component","image","CardContent","Typography","variant","parseInt","grid","display","gridTemplateColumns","rowGap","PokeCardList","pokemons","map","pokemon","sprites","front_default","id","overflowY","margin","Scroll","props","Paper","children","App","onSearchChange","event","setState","searchfield","target","value","state","filteredPokemons","this","filter","toLowerCase","includes","length","square","Skeleton","TextField","style","onChange","fetch","then","resp","json","results","data","url","pokemonUrls","pokemonPromises","Promise","all","React","Component","withStyles","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.af66dcd6.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { CardHeader } from '@material-ui/core';\n\nconst useStyles = makeStyles( theme => ({\n  root: {\n    width: 200,\n    height: 250,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  media: {\n      height: '100%'\n  },\n  img: {\n      backgroundColor: theme.palette.secondary.main,\n      objectFit: 'contain'\n  },\n  txt: {\n      color: theme.palette.secondary.contrastText\n  }\n}));\n\nconst PokeCard = ({name, height, weight, img}) => {\n\n    const classes = useStyles();\n\n  return (\n    <Card className={classes.root} elevation={5}>\n      <CardActionArea >\n        \n        <CardHeader \n        //   titleTypographyProps= {{variant: 'h4'}}\n          title={name}\n        />\n\n        <CardMedia className={classes.img}\n          component='img'\n          height='100px'\n          width='100px'\n          image={img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography variant=\"body1\" component=\"p\">\n            Height: {parseInt(height)/10} meters\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\">\n            Weight: {parseInt(weight)/10} kg\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n\n}\n\nexport default PokeCard;","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport PokeCard from './PokeCard';\n\nconst useStyles = makeStyles( theme => ({\n    grid: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(220px, 1fr))',\n        rowGap: '20px'\n    }\n}))\n\nconst PokeCardList = ({ pokemons }) => {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.grid}>\n            {pokemons.map(pokemon => <PokeCard key={pokemon.id} name={pokemon.name} height={pokemon.height} weight={pokemon.weight} img={pokemon.sprites.front_default} />)}\n        </div>\n\n\n    )\n}\n\nexport default PokeCardList;","import {Paper, makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        overflowY: 'scroll',\n        height: '70vh',\n        margin: '20px'\n    }\n})\n\nconst Scroll = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} variant=\"outlined\">\n            {props.children}\n        </Paper>\n    )\n}\n\nexport default Scroll;","import PokeCardList from './components/PokeCardList';\nimport './App.css';\nimport { Paper, TextField, Typography, withStyles} from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport Scroll from './components/Scroll';\n\nconst useStyles = {\n  root: {\n    height: '100%',\n    textAlign: 'center'\n  }\n};\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      pokemons: [],\n      searchfield: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value});\n  }\n\n  render() {\n\n    const filteredPokemons = this.state.pokemons.filter(pokemon => pokemon.name.toLowerCase().includes(this.state.searchfield.toLowerCase()));\n\n    if(filteredPokemons.length === 0) {\n      return (\n        <Paper className={this.props.classes.root} square={true}>\n          <Typography variant=\"h1\">PokeFriends</Typography>\n          <Skeleton variant=\"wave\"/>\n        </Paper>\n      )\n    }\n\n    return (\n      <Paper className={this.props.classes.root} square={true}>\n        <Typography variant=\"h1\">PokeFriends</Typography>\n        <TextField variant=\"outlined\" style={{margin: '20px'}} onChange={this.onSearchChange}/>\n        <Scroll>\n          <PokeCardList pokemons={filteredPokemons} />\n        </Scroll>\n      </Paper>\n    );\n  }\n\n  async componentDidMount() {\n    const pokemonUrls = await fetch(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=150\").then(resp => resp.json()).then(resp => resp.results.map(data => data.url));\n    const pokemonPromises = pokemonUrls.map(url => fetch(url).then(resp => resp.json()));\n    const pokemons = await Promise.all(pokemonPromises);\n    this.setState({ pokemons: pokemons });\n  }\n\n}\n\nexport default withStyles(useStyles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\nimport { ThemeProvider } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}